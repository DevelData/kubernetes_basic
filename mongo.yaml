# Deployment and Service in 1 file
# Because they belong together
# Deployment
apiVersion: apps/v1
kind: Deployment  # If this db example were to be scaled (replica > 1), use StatefulSet
metadata:
  name: mongo-deployment
  labels:
    app: mongo
spec:
  # how many replicas to create with the defined specification.
  replicas: 1
  selector:
    matchLabels:
      # This labels matches this deployment
      app: mongo
  # Configuration for pod within Deployment
  template:
    metadata:
      labels:
        app: mongo
    # Definition of containers
    spec:
      containers:
      - name: mongodb   #name of container
        image: mongo:5.0  # image for pod
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME  # from mongodb docker documentation
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-user
        - name: MONGO_INITDB_ROOT_PASSWORD  # from mongodb docker documentation
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-password
        # Upper limits for resources - should be specified ideally
        #limits:
        #  memory: "900Mi"
        #  cpu: "1000m"
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: mongo-service   # endpoint used to access mongo - defined in mongo-config file (data.mongo-url)
spec:
  selector:
    app: mongo  # Same label selector that was stated in deployment (spec.template.labels.app)
  ports:
    - protocol: TCP
      port: 27017  # Any port that we want - sets the port of the service (common standard to select same value as targetPort)
      targetPort: 27017   # Should be the same as containerPort - where the service request should be forwarded to